name: build-release
permissions:
  contents: write

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify manifest version matches tag (no bash)
        id: verify
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const tag = process.env.GITHUB_REF_NAME;  // e.g. v0.6.13
            const manifestPath = 'custom_components/canvas_student/manifest.json';
            const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
            core.info(`Tag: ${tag}`);
            core.info(`Manifest: ${manifest.version}`);
            const tagNoV = tag.startsWith('v') ? tag.slice(1) : tag;
            if (manifest.version !== tagNoV) {
              core.setFailed(`Manifest version (${manifest.version}) does not match tag (${tag})`);
            }
            core.setOutput('tag', tag);
            core.setOutput('manifest', manifest.version);

      - name: Install zip
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Build integration zip
        env:
          TAG: ${{ steps.verify.outputs.tag }}
        run: |
          set -e
          cd custom_components
          zip -r "../canvas_student_${TAG}.zip" canvas_student
          ls -lh ..

      - name: Build examples zip (if present)
        env:
          TAG: ${{ steps.verify.outputs.tag }}
        run: |
          set -e
          if [ -d "examples/cards" ]; then
            cd examples
            zip -r "../examples_cards_${TAG}.zip" cards
            ls -lh ..
          else
            echo "No examples/cards directory found; skipping."
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.verify.outputs.tag }}
          name: ${{ steps.verify.outputs.tag }}
          files: |
            canvas_student_${{ steps.verify.outputs.tag }}.zip
            examples_cards_${{ steps.verify.outputs.tag }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: build-release
permissions:
  contents: write

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq and zip
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y jq zip

      - name: Verify manifest version matches tag
        id: verify
        shell: bash
        env:
          TAG: ${{ github.ref_name }}  # e.g. v0.6.13
        run: |
          set -euo pipefail
          echo "Tag: ${TAG}"
          MANIFEST_VERSION="$(jq -r '.version' custom_components/canvas_student/manifest.json)"
          echo "Manifest: ${MANIFEST_VERSION}"

          # Compare: manifest (e.g. 0.6.13) to tag without leading v (e.g. 0.6.13)
          if [[ "${MANIFEST_VERSION}" != "${TAG#v}" ]]; then
            echo "::error::Manifest version (${MANIFEST_VERSION}) does not match tag (${TAG})"
            exit 1
          fi

          # Export outputs for later steps
          {
            echo "tag=${TAG}"
            echo "manifest=${MANIFEST_VERSION}"
          } >> "$GITHUB_OUTPUT"

      - name: Build integration zip
        shell: bash
        run: |
          set -euo pipefail
          cd custom_components
          zip -r "../canvas_student_${GITHUB_REF_NAME}.zip" canvas_student

      - name: Build examples zip
        shell: bash
        run: |
          set -euo pipefail
          if [ -d "examples/cards" ]; then
            cd examples
            zip -r "../examples_cards_${GITHUB_REF_NAME}.zip" cards
          else
            echo "No examples/cards directory found; skipping."
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.verify.outputs.tag }}
          name: ${{ steps.verify.outputs.tag }}
          files: |
            canvas_student_${{ steps.verify.outputs.tag }}.zip
            examples_cards_${{ steps.verify.outputs.tag }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
